<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="418" onload="init(evt)" viewBox="0 0 1200 418" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		if (func != null)
			func = func.replace(/ .*/, "");
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
				return a - b;
			if (a < b || a > b)
				return a - b;
			return matches[b] - matches[a];
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="418.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="401" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="401" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Main.count (74 samples, 50.34%)</title><rect x="596.0" y="193" width="594.0" height="15.0" fill="rgb(253,187,12)" rx="2" ry="2" />
<text text-anchor="" x="598.99" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Main.count</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__memmove_sse2_unaligned_erms (1 samples, 0.68%)</title><rect x="122.4" y="241" width="8.0" height="15.0" fill="rgb(205,18,34)" rx="2" ry="2" />
<text text-anchor="" x="125.38" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>HashMap.hash (7 samples, 4.76%)</title><rect x="700.3" y="161" width="56.2" height="15.0" fill="rgb(247,27,21)" rx="2" ry="2" />
<text text-anchor="" x="703.34" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >HashM..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>HashMap.putVal (2 samples, 1.36%)</title><rect x="973.3" y="177" width="16.0" height="15.0" fill="rgb(234,81,7)" rx="2" ry="2" />
<text text-anchor="" x="976.27" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>do_page_fault (13 samples, 8.84%)</title><rect x="315.0" y="209" width="104.4" height="15.0" fill="rgb(228,182,50)" rx="2" ry="2" />
<text text-anchor="" x="318.03" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >do_page_fault</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pmd_pfn (1 samples, 0.68%)</title><rect x="571.9" y="225" width="8.0" height="15.0" fill="rgb(229,97,44)" rx="2" ry="2" />
<text text-anchor="" x="574.90" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Method::klass_name() const (2 samples, 1.36%)</title><rect x="636.1" y="113" width="16.1" height="15.0" fill="rgb(248,99,11)" rx="2" ry="2" />
<text text-anchor="" x="639.12" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SharedRuntime::dtrace_method_entry(JavaThread*, Method*) (1 samples, 0.68%)</title><rect x="901.0" y="129" width="8.0" height="15.0" fill="rgb(228,175,22)" rx="2" ry="2" />
<text text-anchor="" x="904.02" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Main.loop (75 samples, 51.02%)</title><rect x="588.0" y="209" width="602.0" height="15.0" fill="rgb(249,0,51)" rx="2" ry="2" />
<text text-anchor="" x="590.96" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Main.loop</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>handle_pte_fault (1 samples, 0.68%)</title><rect x="571.9" y="241" width="8.0" height="15.0" fill="rgb(230,50,19)" rx="2" ry="2" />
<text text-anchor="" x="574.90" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (2 samples, 1.36%)</title><rect x="555.9" y="257" width="16.0" height="15.0" fill="rgb(241,81,8)" rx="2" ry="2" />
<text text-anchor="" x="558.85" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>handle_mm_fault (1 samples, 0.68%)</title><rect x="571.9" y="273" width="8.0" height="15.0" fill="rgb(216,222,39)" rx="2" ry="2" />
<text text-anchor="" x="574.90" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[Missed User Stack] (1 samples, 0.68%)</title><rect x="571.9" y="337" width="8.0" height="15.0" fill="rgb(223,166,44)" rx="2" ry="2" />
<text text-anchor="" x="574.90" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ScavengeRootsTask::do_it(GCTaskManager*, unsigned int) (1 samples, 0.68%)</title><rect x="10.0" y="273" width="8.0" height="15.0" fill="rgb(228,20,24)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SharedRuntime::dtrace_method_exit(JavaThread*, Method*) (1 samples, 0.68%)</title><rect x="1125.8" y="129" width="8.0" height="15.0" fill="rgb(237,72,22)" rx="2" ry="2" />
<text text-anchor="" x="1128.78" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>HashMap.put (34 samples, 23.13%)</title><rect x="700.3" y="177" width="273.0" height="15.0" fill="rgb(217,15,17)" rx="2" ry="2" />
<text text-anchor="" x="703.34" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >HashMap.put</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Object.&lt;init&gt; (1 samples, 0.68%)</title><rect x="893.0" y="129" width="8.0" height="15.0" fill="rgb(248,164,19)" rx="2" ry="2" />
<text text-anchor="" x="895.99" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>get_vma_policy.part.34 (1 samples, 0.68%)</title><rect x="387.3" y="129" width="8.0" height="15.0" fill="rgb(207,65,52)" rx="2" ry="2" />
<text text-anchor="" x="390.28" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>oopDesc* PSPromotionManager::copy_to_survivor_space&lt;false&gt;(oopDesc*) (48 samples, 32.65%)</title><rect x="130.4" y="241" width="385.3" height="15.0" fill="rgb(244,215,28)" rx="2" ry="2" />
<text text-anchor="" x="133.41" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >oopDesc* PSPromotionManager::copy_to_survivor_space&lt;..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Method::klass_name() const (2 samples, 1.36%)</title><rect x="876.9" y="129" width="16.1" height="15.0" fill="rgb(215,71,36)" rx="2" ry="2" />
<text text-anchor="" x="879.94" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clear_page_erms (1 samples, 0.68%)</title><rect x="363.2" y="81" width="8.0" height="15.0" fill="rgb(238,76,16)" rx="2" ry="2" />
<text text-anchor="" x="366.20" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Integer.stringSize (1 samples, 0.68%)</title><rect x="1093.7" y="145" width="8.0" height="15.0" fill="rgb(209,148,53)" rx="2" ry="2" />
<text text-anchor="" x="1096.67" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SharedRuntime::dtrace_method_entry(JavaThread*, Method*) (1 samples, 0.68%)</title><rect x="684.3" y="161" width="8.0" height="15.0" fill="rgb(228,208,4)" rx="2" ry="2" />
<text text-anchor="" x="687.29" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>page_fault (13 samples, 8.84%)</title><rect x="315.0" y="225" width="104.4" height="15.0" fill="rgb(218,140,6)" rx="2" ry="2" />
<text text-anchor="" x="318.03" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >page_fault</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Integer.hashCode (2 samples, 1.36%)</title><rect x="636.1" y="129" width="16.1" height="15.0" fill="rgb(242,90,31)" rx="2" ry="2" />
<text text-anchor="" x="639.12" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Integer.getChars (1 samples, 0.68%)</title><rect x="1069.6" y="161" width="8.0" height="15.0" fill="rgb(236,45,32)" rx="2" ry="2" />
<text text-anchor="" x="1072.59" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>try_charge (1 samples, 0.68%)</title><rect x="1182.0" y="49" width="8.0" height="15.0" fill="rgb(221,33,50)" rx="2" ry="2" />
<text text-anchor="" x="1184.97" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::call_run() (70 samples, 47.62%)</title><rect x="10.0" y="305" width="561.9" height="15.0" fill="rgb(254,222,6)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Thread::call_run()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__handle_mm_fault (1 samples, 0.68%)</title><rect x="571.9" y="257" width="8.0" height="15.0" fill="rgb(215,191,10)" rx="2" ry="2" />
<text text-anchor="" x="574.90" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clear_page_erms (1 samples, 0.68%)</title><rect x="363.2" y="97" width="8.0" height="15.0" fill="rgb(232,163,50)" rx="2" ry="2" />
<text text-anchor="" x="366.20" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>start_thread (70 samples, 47.62%)</title><rect x="10.0" y="337" width="561.9" height="15.0" fill="rgb(232,201,30)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >start_thread</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>page_fault (7 samples, 4.76%)</title><rect x="1133.8" y="177" width="56.2" height="15.0" fill="rgb(222,20,37)" rx="2" ry="2" />
<text text-anchor="" x="1136.81" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >page_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__do_page_fault (5 samples, 3.40%)</title><rect x="315.0" y="177" width="40.2" height="15.0" fill="rgb(233,120,30)" rx="2" ry="2" />
<text text-anchor="" x="318.03" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__d..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Method::klass_name() const (1 samples, 0.68%)</title><rect x="708.4" y="113" width="8.0" height="15.0" fill="rgb(245,204,12)" rx="2" ry="2" />
<text text-anchor="" x="711.37" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__alloc_pages_nodemask (4 samples, 2.72%)</title><rect x="1141.8" y="65" width="32.1" height="15.0" fill="rgb(238,147,0)" rx="2" ry="2" />
<text text-anchor="" x="1144.84" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SharedRuntime::dtrace_method_entry(JavaThread*, Method*) (1 samples, 0.68%)</title><rect x="965.2" y="161" width="8.1" height="15.0" fill="rgb(246,135,40)" rx="2" ry="2" />
<text text-anchor="" x="968.24" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clear_page_erms (3 samples, 2.04%)</title><rect x="1149.9" y="49" width="24.0" height="15.0" fill="rgb(248,119,22)" rx="2" ry="2" />
<text text-anchor="" x="1152.86" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__alloc_pages_nodemask (1 samples, 0.68%)</title><rect x="355.2" y="97" width="8.0" height="15.0" fill="rgb(245,172,48)" rx="2" ry="2" />
<text text-anchor="" x="358.17" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Method::klass_name() const (2 samples, 1.36%)</title><rect x="1013.4" y="161" width="16.1" height="15.0" fill="rgb(216,152,52)" rx="2" ry="2" />
<text text-anchor="" x="1016.40" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Method::klass_name() const (1 samples, 0.68%)</title><rect x="941.2" y="145" width="8.0" height="15.0" fill="rgb(219,76,51)" rx="2" ry="2" />
<text text-anchor="" x="944.16" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Object.&lt;init&gt; (1 samples, 0.68%)</title><rect x="1117.8" y="129" width="8.0" height="15.0" fill="rgb(249,143,32)" rx="2" ry="2" />
<text text-anchor="" x="1120.76" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__do_page_fault (1 samples, 0.68%)</title><rect x="1133.8" y="129" width="8.0" height="15.0" fill="rgb(243,227,48)" rx="2" ry="2" />
<text text-anchor="" x="1136.81" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>call_stub (76 samples, 51.70%)</title><rect x="579.9" y="241" width="610.1" height="15.0" fill="rgb(221,220,32)" rx="2" ry="2" />
<text text-anchor="" x="582.93" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >call_stub</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SharedRuntime::dtrace_method_exit(JavaThread*, Method*) (1 samples, 0.68%)</title><rect x="828.8" y="129" width="8.0" height="15.0" fill="rgb(252,6,1)" rx="2" ry="2" />
<text text-anchor="" x="831.78" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ParallelScavengeHeap::is_in_reserved(void const*) const (1 samples, 0.68%)</title><rect x="547.8" y="257" width="8.1" height="15.0" fill="rgb(251,60,45)" rx="2" ry="2" />
<text text-anchor="" x="550.82" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Method::klass_name() const (1 samples, 0.68%)</title><rect x="628.1" y="145" width="8.0" height="15.0" fill="rgb(250,74,15)" rx="2" ry="2" />
<text text-anchor="" x="631.10" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>get_mem_cgroup_from_mm (1 samples, 0.68%)</title><rect x="1173.9" y="49" width="8.1" height="15.0" fill="rgb(223,105,15)" rx="2" ry="2" />
<text text-anchor="" x="1176.95" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ThreadJavaMain (76 samples, 51.70%)</title><rect x="579.9" y="321" width="610.1" height="15.0" fill="rgb(210,139,33)" rx="2" ry="2" />
<text text-anchor="" x="582.93" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ThreadJavaMain</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SharedRuntime::dtrace_method_exit(JavaThread*, Method*) (1 samples, 0.68%)</title><rect x="1109.7" y="145" width="8.1" height="15.0" fill="rgb(213,164,51)" rx="2" ry="2" />
<text text-anchor="" x="1112.73" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Integer.hashCode (1 samples, 0.68%)</title><rect x="708.4" y="129" width="8.0" height="15.0" fill="rgb(208,183,26)" rx="2" ry="2" />
<text text-anchor="" x="711.37" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java (77 samples, 52.38%)</title><rect x="571.9" y="353" width="618.1" height="15.0" fill="rgb(229,108,41)" rx="2" ry="2" />
<text text-anchor="" x="574.90" y="363.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>HashMap$Node.&lt;init&gt; (4 samples, 2.72%)</title><rect x="844.8" y="129" width="32.1" height="15.0" fill="rgb(206,52,29)" rx="2" ry="2" />
<text text-anchor="" x="847.83" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Ha..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>HashMap.resize (4 samples, 2.72%)</title><rect x="909.0" y="145" width="32.2" height="15.0" fill="rgb(240,228,32)" rx="2" ry="2" />
<text text-anchor="" x="912.05" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Ha..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Method::klass_name() const (1 samples, 0.68%)</title><rect x="1117.8" y="113" width="8.0" height="15.0" fill="rgb(253,144,17)" rx="2" ry="2" />
<text text-anchor="" x="1120.76" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (147 samples, 100%)</title><rect x="10.0" y="369" width="1180.0" height="15.0" fill="rgb(245,125,37)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="379.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void PSPromotionManager::process_array_chunk_work&lt;unsigned int&gt;(oopDesc*, int, int) (4 samples, 2.72%)</title><rect x="515.7" y="241" width="32.1" height="15.0" fill="rgb(253,114,12)" rx="2" ry="2" />
<text text-anchor="" x="518.71" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >vo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Integer.hashCode (2 samples, 1.36%)</title><rect x="668.2" y="161" width="16.1" height="15.0" fill="rgb(212,188,29)" rx="2" ry="2" />
<text text-anchor="" x="671.23" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__alloc_pages_nodemask (1 samples, 0.68%)</title><rect x="1141.8" y="49" width="8.1" height="15.0" fill="rgb(235,64,43)" rx="2" ry="2" />
<text text-anchor="" x="1144.84" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .isra.83] [clone .constprop.254] (76 samples, 51.70%)</title><rect x="579.9" y="273" width="610.1" height="15.0" fill="rgb(236,13,48)" rx="2" ry="2" />
<text text-anchor="" x="582.93" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_Arg..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__handle_mm_fault (7 samples, 4.76%)</title><rect x="355.2" y="161" width="56.2" height="15.0" fill="rgb(238,103,8)" rx="2" ry="2" />
<text text-anchor="" x="358.17" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__han..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>mem_cgroup_try_charge (1 samples, 0.68%)</title><rect x="403.3" y="129" width="8.1" height="15.0" fill="rgb(215,194,32)" rx="2" ry="2" />
<text text-anchor="" x="406.33" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>handle_pte_fault (6 samples, 4.08%)</title><rect x="1141.8" y="97" width="48.2" height="15.0" fill="rgb(226,0,23)" rx="2" ry="2" />
<text text-anchor="" x="1144.84" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >hand..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ThreadRootsTask::do_it(GCTaskManager*, unsigned int) (69 samples, 46.94%)</title><rect x="18.0" y="273" width="553.9" height="15.0" fill="rgb(215,176,8)" rx="2" ry="2" />
<text text-anchor="" x="21.03" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ThreadRootsTask::do_it(GCTaskManager*, unsigned int)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Integer.hashCode (6 samples, 4.08%)</title><rect x="700.3" y="145" width="48.2" height="15.0" fill="rgb(230,91,28)" rx="2" ry="2" />
<text text-anchor="" x="703.34" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Inte..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>get_page_from_freelist (2 samples, 1.36%)</title><rect x="371.2" y="97" width="16.1" height="15.0" fill="rgb(238,225,38)" rx="2" ry="2" />
<text text-anchor="" x="374.22" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Method::klass_name() const (1 samples, 0.68%)</title><rect x="748.5" y="145" width="8.0" height="15.0" fill="rgb(220,200,17)" rx="2" ry="2" />
<text text-anchor="" x="751.50" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>handle_pte_fault (7 samples, 4.76%)</title><rect x="355.2" y="145" width="56.2" height="15.0" fill="rgb(220,39,1)" rx="2" ry="2" />
<text text-anchor="" x="358.17" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >handl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Method::klass_name() const (2 samples, 1.36%)</title><rect x="997.3" y="129" width="16.1" height="15.0" fill="rgb(211,85,48)" rx="2" ry="2" />
<text text-anchor="" x="1000.35" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>mem_cgroup_try_charge (2 samples, 1.36%)</title><rect x="1173.9" y="81" width="16.1" height="15.0" fill="rgb(216,164,54)" rx="2" ry="2" />
<text text-anchor="" x="1176.95" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__alloc_pages_nodemask (4 samples, 2.72%)</title><rect x="355.2" y="113" width="32.1" height="15.0" fill="rgb(213,182,27)" rx="2" ry="2" />
<text text-anchor="" x="358.17" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>alloc_pages_vma (4 samples, 2.72%)</title><rect x="355.2" y="129" width="32.1" height="15.0" fill="rgb(212,161,22)" rx="2" ry="2" />
<text text-anchor="" x="358.17" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >al..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>HashMap.getNode (2 samples, 1.36%)</title><rect x="620.1" y="161" width="16.0" height="15.0" fill="rgb(231,35,3)" rx="2" ry="2" />
<text text-anchor="" x="623.07" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Method::klass_name() const (3 samples, 2.04%)</title><rect x="852.9" y="97" width="24.0" height="15.0" fill="rgb(207,54,33)" rx="2" ry="2" />
<text text-anchor="" x="855.86" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >M..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>get_page_from_freelist (2 samples, 1.36%)</title><rect x="371.2" y="81" width="16.1" height="15.0" fill="rgb(226,145,10)" rx="2" ry="2" />
<text text-anchor="" x="374.22" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (76 samples, 51.70%)</title><rect x="579.9" y="257" width="610.1" height="15.0" fill="rgb(228,150,9)" rx="2" ry="2" />
<text text-anchor="" x="582.93" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>handle_mm_fault (1 samples, 0.68%)</title><rect x="411.4" y="161" width="8.0" height="15.0" fill="rgb(245,196,48)" rx="2" ry="2" />
<text text-anchor="" x="414.36" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>HashMap.getNode (1 samples, 0.68%)</title><rect x="692.3" y="177" width="8.0" height="15.0" fill="rgb(210,41,5)" rx="2" ry="2" />
<text text-anchor="" x="695.31" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Integer.toString (7 samples, 4.76%)</title><rect x="1077.6" y="161" width="56.2" height="15.0" fill="rgb(245,207,4)" rx="2" ry="2" />
<text text-anchor="" x="1080.62" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Integ..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ParGC Thread#0 (70 samples, 47.62%)</title><rect x="10.0" y="353" width="561.9" height="15.0" fill="rgb(251,56,37)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="363.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ParGC Thread#0</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SharedRuntime::dtrace_method_exit(JavaThread*, Method*) (1 samples, 0.68%)</title><rect x="652.2" y="129" width="8.0" height="15.0" fill="rgb(226,14,48)" rx="2" ry="2" />
<text text-anchor="" x="655.18" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Method::klass_name() const (1 samples, 0.68%)</title><rect x="660.2" y="145" width="8.0" height="15.0" fill="rgb(239,67,54)" rx="2" ry="2" />
<text text-anchor="" x="663.20" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__handle_mm_fault (6 samples, 4.08%)</title><rect x="1141.8" y="113" width="48.2" height="15.0" fill="rgb(214,155,18)" rx="2" ry="2" />
<text text-anchor="" x="1144.84" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__ha..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>HashMap.putVal (24 samples, 16.33%)</title><rect x="756.5" y="161" width="192.7" height="15.0" fill="rgb(215,54,17)" rx="2" ry="2" />
<text text-anchor="" x="759.53" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >HashMap.putVal</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Integer.hashCode (3 samples, 2.04%)</title><rect x="636.1" y="145" width="24.1" height="15.0" fill="rgb(230,175,48)" rx="2" ry="2" />
<text text-anchor="" x="639.12" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >I..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SharedRuntime::dtrace_method_exit(JavaThread*, Method*) (1 samples, 0.68%)</title><rect x="1045.5" y="161" width="8.0" height="15.0" fill="rgb(217,65,39)" rx="2" ry="2" />
<text text-anchor="" x="1048.51" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__do_page_fault (7 samples, 4.76%)</title><rect x="1133.8" y="145" width="56.2" height="15.0" fill="rgb(232,63,14)" rx="2" ry="2" />
<text text-anchor="" x="1136.81" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__do_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Integer.valueOf (1 samples, 0.68%)</title><rect x="588.0" y="193" width="8.0" height="15.0" fill="rgb(236,36,33)" rx="2" ry="2" />
<text text-anchor="" x="590.96" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Method::klass_name() const (1 samples, 0.68%)</title><rect x="1101.7" y="145" width="8.0" height="15.0" fill="rgb(210,178,51)" rx="2" ry="2" />
<text text-anchor="" x="1104.70" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>alloc_pages_vma (4 samples, 2.72%)</title><rect x="1141.8" y="81" width="32.1" height="15.0" fill="rgb(221,216,28)" rx="2" ry="2" />
<text text-anchor="" x="1144.84" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >al..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Method::klass_name() const (1 samples, 0.68%)</title><rect x="1093.7" y="129" width="8.0" height="15.0" fill="rgb(223,111,32)" rx="2" ry="2" />
<text text-anchor="" x="1096.67" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>jni_CallStaticVoidMethod (76 samples, 51.70%)</title><rect x="579.9" y="289" width="610.1" height="15.0" fill="rgb(212,44,54)" rx="2" ry="2" />
<text text-anchor="" x="582.93" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >jni_CallStaticVoidMethod</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Integer.getChars (1 samples, 0.68%)</title><rect x="1085.6" y="145" width="8.1" height="15.0" fill="rgb(241,37,9)" rx="2" ry="2" />
<text text-anchor="" x="1088.65" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>HashMap.get (9 samples, 6.12%)</title><rect x="620.1" y="177" width="72.2" height="15.0" fill="rgb(244,73,33)" rx="2" ry="2" />
<text text-anchor="" x="623.07" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >HashMap...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>get_vma_policy.part.34 (1 samples, 0.68%)</title><rect x="387.3" y="113" width="8.0" height="15.0" fill="rgb(252,172,30)" rx="2" ry="2" />
<text text-anchor="" x="390.28" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SharedRuntime::dtrace_method_exit(JavaThread*, Method*) (1 samples, 0.68%)</title><rect x="1053.5" y="177" width="8.1" height="15.0" fill="rgb(234,14,19)" rx="2" ry="2" />
<text text-anchor="" x="1056.54" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SharedRuntime::dtrace_method_entry(JavaThread*, Method*) (1 samples, 0.68%)</title><rect x="740.5" y="129" width="8.0" height="15.0" fill="rgb(212,226,4)" rx="2" ry="2" />
<text text-anchor="" x="743.48" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>String.valueOf (9 samples, 6.12%)</title><rect x="1061.6" y="177" width="72.2" height="15.0" fill="rgb(239,46,10)" rx="2" ry="2" />
<text text-anchor="" x="1064.56" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >String.v..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>page_fault (1 samples, 0.68%)</title><rect x="571.9" y="321" width="8.0" height="15.0" fill="rgb(219,102,8)" rx="2" ry="2" />
<text text-anchor="" x="574.90" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>try_charge (1 samples, 0.68%)</title><rect x="403.3" y="113" width="8.1" height="15.0" fill="rgb(216,25,26)" rx="2" ry="2" />
<text text-anchor="" x="406.33" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>HashMap$Node.&lt;init&gt; (1 samples, 0.68%)</title><rect x="804.7" y="145" width="8.0" height="15.0" fill="rgb(210,145,44)" rx="2" ry="2" />
<text text-anchor="" x="807.69" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JavaMain (76 samples, 51.70%)</title><rect x="579.9" y="305" width="610.1" height="15.0" fill="rgb(214,159,53)" rx="2" ry="2" />
<text text-anchor="" x="582.93" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >JavaMain</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PSPromotionManager::drain_stacks_depth(bool) (66 samples, 44.90%)</title><rect x="18.0" y="257" width="529.8" height="15.0" fill="rgb(227,153,52)" rx="2" ry="2" />
<text text-anchor="" x="21.03" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >PSPromotionManager::drain_stacks_depth(bool)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Integer.&lt;init&gt; (2 samples, 1.36%)</title><rect x="997.3" y="161" width="16.1" height="15.0" fill="rgb(233,48,6)" rx="2" ry="2" />
<text text-anchor="" x="1000.35" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 0.68%)</title><rect x="10.0" y="241" width="8.0" height="15.0" fill="rgb(209,176,36)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>String.&lt;init&gt; (2 samples, 1.36%)</title><rect x="1117.8" y="145" width="16.0" height="15.0" fill="rgb(208,185,20)" rx="2" ry="2" />
<text text-anchor="" x="1120.76" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Main.count (1 samples, 0.68%)</title><rect x="579.9" y="209" width="8.1" height="15.0" fill="rgb(213,215,35)" rx="2" ry="2" />
<text text-anchor="" x="582.93" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>get_mem_cgroup_from_mm (1 samples, 0.68%)</title><rect x="1173.9" y="65" width="8.1" height="15.0" fill="rgb(216,63,36)" rx="2" ry="2" />
<text text-anchor="" x="1176.95" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__do_page_fault (13 samples, 8.84%)</title><rect x="315.0" y="193" width="104.4" height="15.0" fill="rgb(249,193,24)" rx="2" ry="2" />
<text text-anchor="" x="318.03" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__do_page_fa..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>do_page_fault (1 samples, 0.68%)</title><rect x="571.9" y="305" width="8.0" height="15.0" fill="rgb(216,2,43)" rx="2" ry="2" />
<text text-anchor="" x="574.90" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ScavengableNMethods::nmethods_do_and_prune(CodeBlobToOopClosure*) (1 samples, 0.68%)</title><rect x="10.0" y="257" width="8.0" height="15.0" fill="rgb(253,34,20)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clear_page_erms (3 samples, 2.04%)</title><rect x="1149.9" y="33" width="24.0" height="15.0" fill="rgb(230,65,34)" rx="2" ry="2" />
<text text-anchor="" x="1152.86" y="43.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>HashMap.newNode (9 samples, 6.12%)</title><rect x="836.8" y="145" width="72.2" height="15.0" fill="rgb(252,117,19)" rx="2" ry="2" />
<text text-anchor="" x="839.80" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >HashMap...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>HashMap.hash (4 samples, 2.72%)</title><rect x="636.1" y="161" width="32.1" height="15.0" fill="rgb(244,208,14)" rx="2" ry="2" />
<text text-anchor="" x="639.12" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Ha..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>try_charge (1 samples, 0.68%)</title><rect x="1182.0" y="65" width="8.0" height="15.0" fill="rgb(240,203,8)" rx="2" ry="2" />
<text text-anchor="" x="1184.97" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Method::klass_name() const (2 samples, 1.36%)</title><rect x="812.7" y="129" width="16.1" height="15.0" fill="rgb(254,125,7)" rx="2" ry="2" />
<text text-anchor="" x="815.72" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void OopOopIterateBackwardsDispatch&lt;PSPushContentsClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(PSPushContentsClosure*, oopDesc*, Klass*) (12 samples, 8.16%)</title><rect x="419.4" y="225" width="96.3" height="15.0" fill="rgb(248,188,5)" rx="2" ry="2" />
<text text-anchor="" x="422.39" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >void OopOop..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Method::klass_name() const (3 samples, 2.04%)</title><rect x="716.4" y="129" width="24.1" height="15.0" fill="rgb(231,12,24)" rx="2" ry="2" />
<text text-anchor="" x="719.39" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >M..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>thread_native_entry(Thread*) (70 samples, 47.62%)</title><rect x="10.0" y="321" width="561.9" height="15.0" fill="rgb(221,22,27)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >thread_native_entry(Thread*)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pmd_pfn (1 samples, 0.68%)</title><rect x="571.9" y="209" width="8.0" height="15.0" fill="rgb(221,32,12)" rx="2" ry="2" />
<text text-anchor="" x="574.90" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>do_page_fault (7 samples, 4.76%)</title><rect x="1133.8" y="161" width="56.2" height="15.0" fill="rgb(250,225,45)" rx="2" ry="2" />
<text text-anchor="" x="1136.81" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >do_pa..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__do_page_fault (1 samples, 0.68%)</title><rect x="571.9" y="289" width="8.0" height="15.0" fill="rgb(241,44,39)" rx="2" ry="2" />
<text text-anchor="" x="574.90" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>handle_mm_fault (6 samples, 4.08%)</title><rect x="1141.8" y="129" width="48.2" height="15.0" fill="rgb(212,37,54)" rx="2" ry="2" />
<text text-anchor="" x="1144.84" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >hand..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Main.main (76 samples, 51.70%)</title><rect x="579.9" y="225" width="610.1" height="15.0" fill="rgb(238,19,19)" rx="2" ry="2" />
<text text-anchor="" x="582.93" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Main.main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Integer.hashCode (2 samples, 1.36%)</title><rect x="949.2" y="161" width="16.0" height="15.0" fill="rgb(205,93,17)" rx="2" ry="2" />
<text text-anchor="" x="952.18" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Object.&lt;init&gt; (4 samples, 2.72%)</title><rect x="844.8" y="113" width="32.1" height="15.0" fill="rgb(208,135,1)" rx="2" ry="2" />
<text text-anchor="" x="847.83" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Ob..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Number.&lt;init&gt; (2 samples, 1.36%)</title><rect x="997.3" y="145" width="16.1" height="15.0" fill="rgb(244,117,47)" rx="2" ry="2" />
<text text-anchor="" x="1000.35" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>start_thread (76 samples, 51.70%)</title><rect x="579.9" y="337" width="610.1" height="15.0" fill="rgb(229,84,9)" rx="2" ry="2" />
<text text-anchor="" x="582.93" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >start_thread</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>handle_mm_fault (8 samples, 5.44%)</title><rect x="355.2" y="177" width="64.2" height="15.0" fill="rgb(250,215,14)" rx="2" ry="2" />
<text text-anchor="" x="358.17" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >handle_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Integer.valueOf (8 samples, 5.44%)</title><rect x="989.3" y="177" width="64.2" height="15.0" fill="rgb(246,32,49)" rx="2" ry="2" />
<text text-anchor="" x="992.32" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Integer..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>handle_pte_fault (1 samples, 0.68%)</title><rect x="395.3" y="129" width="8.0" height="15.0" fill="rgb(236,215,17)" rx="2" ry="2" />
<text text-anchor="" x="398.31" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>HashMap.afterNodeInsertion (3 samples, 2.04%)</title><rect x="812.7" y="145" width="24.1" height="15.0" fill="rgb(243,142,25)" rx="2" ry="2" />
<text text-anchor="" x="815.72" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >H..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>GCTaskThread::run() (70 samples, 47.62%)</title><rect x="10.0" y="289" width="561.9" height="15.0" fill="rgb(245,56,8)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >GCTaskThread::run()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>try_charge (1 samples, 0.68%)</title><rect x="403.3" y="97" width="8.1" height="15.0" fill="rgb(217,16,17)" rx="2" ry="2" />
<text text-anchor="" x="406.33" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Number.&lt;init&gt; (2 samples, 1.36%)</title><rect x="1029.5" y="161" width="16.0" height="15.0" fill="rgb(208,54,30)" rx="2" ry="2" />
<text text-anchor="" x="1032.46" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
